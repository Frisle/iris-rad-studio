ROUTINE IRISRADAuthentication
IRISRADAuthentication(ServiceName,Username,Password,Properties,Status) PUBLIC {
  #include %occStatus
  #include %occErrors

  Set Status = $SYSTEM.Status.OK()

  Set Namespace = %session.Namespace
  Set radNamespace = "IRISAPP"
  ZNspace radNamespace

  Set $ZTRAP="Error"

  Set isNamespaceRADApp = ##class(dc.irisrad.data.RADUserApp).IsNamespaceRADApp(Namespace)
  If (isNamespaceRADApp) {
    If (##class(dc.irisrad.data.RADUser).IsUserRADAdmin(Username)) {
      // user is an admin, so authenticate in default RAD namespace
      Set Status = ##class(dc.irisrad.data.RADUser).Authenticate(Username, Password, .Properties)

    } Else {
      // user is a common one, so authenticate in the app namespace
      ZNspace Namespace
      Try {
        Set Status = ##class(dc.irisrad.default.UserForm).Authenticate(Username, Password, .Properties)
      }
      Catch ex {
        Set Status = ex.AsStatus()
      }
      ZNspace radNamespace
    }

  } Else {
    // namespace hasn't a RAD app, so we don't validate anything
    Set Status = 0
  }

  ZNspace "%SYS"

  Quit Status

Error
  ZNspace "%SYS"
  Set $ZTRAP=""
  Set Status = $SYSTEM.Status.Error($$$ObjectScriptError,$ZERROR)
  Quit Status
}
